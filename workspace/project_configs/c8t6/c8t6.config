
#1: 编译规则
include $(BUILD_DIR)/arch_config/cortex_m3.config
include $(COMMON_CONFIG_DIR)/common_configs.mk

#2: 编译控制
compile_enable_detail 		= n

#3: 链接
#CLINK_FLAGS += --library_type=microlib
CLINK_FLAGS += -Wl,-T "$(PROJECT_DIR)/$(PROJECT)/$(PROJECT).ld"
CLINK_FLAGS += -Wl,--gc-sections
CLINK_FLAGS += -Wl,--cref
CLINK_FLAGS += -specs=nano.specs
#CLINK_FLAGS += -lc -lm -lnosys
CLINK_FLAGS += -mthumb
CLINK_FLAGS += -mthumb-interwork
CLINK_FLAGS += -fdata-sections -ffunction-sections
CLINK_FLAGS += -Wl,--wrap=atexit
CLINK_FLAGS += -nostartfiles
CLINK_FLAGS += -Wl,--nostdlib
#CLINK_FLAGS += -Wl,--print-gc-sections
#CLINK_FLAGS += -std=c99

#4: c文件编译
#！！使用hal库时要指定硬件型号
CFLAGS += -DUSE_HAL_DRIVER
CFLAGS += -DSTM32F103xB
CFLAGS += -Wall
CFLAGS += -ggdb
CFLAGS += -fdata-sections -ffunction-sections
CFLAGS += -mthumb
CFLAGS += -mthumb-interwork
CFLAGS += -nostartfiles
#CFLAGS += -std=c99
#CFLAGS += -MMD -MP -MF "$(@:%.o=%.d)"

#5: 汇编文件
ASMFLAGS += -Wall
ASMFLAGS += -ggdb
ASMFLAGS += -fdata-sections -ffunction-sections
ASMFLAGS += -mthumb
ASMFLAGS += -mthumb-interwork
ASMFLAGS += -nostartfiles

#6: 开发板
	CATOS_BOARD_STM32F103VET6_FIRE				=	y

#7: 指定部分模块的编译与否
#7.1: 内核模块
#CATOS
#bsp
#src
#	component
		CATOS_ENABLE_MEMRW						=	y
#	core
# 		idle_task
# 		init
# 		interrupt
# 		support
#test
	CATOS_ENABLE_TEST							=	y
	CATOS_TEST_CAT_STRING						=   n


#7.2: 第三方

#7.3: 应用模块
#user




